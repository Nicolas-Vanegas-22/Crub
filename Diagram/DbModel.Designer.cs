//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("DbModel", "FormModuleForm", "FormModule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.FormModule), "Form", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.Form))]
[assembly: EdmRelationshipAttribute("DbModel", "ModuleFormModule", "FormModule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.FormModule), "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.Module))]
[assembly: EdmRelationshipAttribute("DbModel", "UserRolUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.User), "RolUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.RolUser), true)]
[assembly: EdmRelationshipAttribute("DbModel", "RolUserRol", "RolUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.RolUser), "Rol", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.Rol), true)]
[assembly: EdmRelationshipAttribute("DbModel", "RolRolFormPermission", "Rol", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.Rol), "RolFormPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.RolFormPermission), true)]
[assembly: EdmRelationshipAttribute("DbModel", "FormRolFormPermission", "Form", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.Form), "RolFormPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.RolFormPermission), true)]
[assembly: EdmRelationshipAttribute("DbModel", "RolFormPermissionPermission", "RolFormPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.RolFormPermission), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.Permission))]
[assembly: EdmRelationshipAttribute("DbModel", "UserChangeLog", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Diagram.User), "ChangeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Diagram.ChangeLog), true)]

#endregion

namespace Diagram
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class DbModelContainer : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto DbModelContainer usando la cadena de conexión encontrada en la sección 'DbModelContainer' del archivo de configuración de la aplicación.
        /// </summary>
        public DbModelContainer() : base("name=DbModelContainer", "DbModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto DbModelContainer.
        /// </summary>
        public DbModelContainer(string connectionString) : base(connectionString, "DbModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto DbModelContainer.
        /// </summary>
        public DbModelContainer(EntityConnection connection) : base(connection, "DbModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Form> Forms
        {
            get
            {
                if ((_Forms == null))
                {
                    _Forms = base.CreateObjectSet<Form>("Forms");
                }
                return _Forms;
            }
        }
        private ObjectSet<Form> _Forms;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Module> Modules
        {
            get
            {
                if ((_Modules == null))
                {
                    _Modules = base.CreateObjectSet<Module>("Modules");
                }
                return _Modules;
            }
        }
        private ObjectSet<Module> _Modules;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<FormModule> FormsModules
        {
            get
            {
                if ((_FormsModules == null))
                {
                    _FormsModules = base.CreateObjectSet<FormModule>("FormsModules");
                }
                return _FormsModules;
            }
        }
        private ObjectSet<FormModule> _FormsModules;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<RolUser> RolsUsers
        {
            get
            {
                if ((_RolsUsers == null))
                {
                    _RolsUsers = base.CreateObjectSet<RolUser>("RolsUsers");
                }
                return _RolsUsers;
            }
        }
        private ObjectSet<RolUser> _RolsUsers;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Rol> Rols
        {
            get
            {
                if ((_Rols == null))
                {
                    _Rols = base.CreateObjectSet<Rol>("Rols");
                }
                return _Rols;
            }
        }
        private ObjectSet<Rol> _Rols;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<RolFormPermission> RolsFormsPermissions
        {
            get
            {
                if ((_RolsFormsPermissions == null))
                {
                    _RolsFormsPermissions = base.CreateObjectSet<RolFormPermission>("RolsFormsPermissions");
                }
                return _RolsFormsPermissions;
            }
        }
        private ObjectSet<RolFormPermission> _RolsFormsPermissions;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<ChangeLog> ChangesLogs
        {
            get
            {
                if ((_ChangesLogs == null))
                {
                    _ChangesLogs = base.CreateObjectSet<ChangeLog>("ChangesLogs");
                }
                return _ChangesLogs;
            }
        }
        private ObjectSet<ChangeLog> _ChangesLogs;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Forms. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToForms(Form form)
        {
            base.AddObject("Forms", form);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Modules. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToModules(Module module)
        {
            base.AddObject("Modules", module);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet FormsModules. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToFormsModules(FormModule formModule)
        {
            base.AddObject("FormsModules", formModule);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Users. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet RolsUsers. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToRolsUsers(RolUser rolUser)
        {
            base.AddObject("RolsUsers", rolUser);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Rols. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToRols(Rol rol)
        {
            base.AddObject("Rols", rol);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet RolsFormsPermissions. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToRolsFormsPermissions(RolFormPermission rolFormPermission)
        {
            base.AddObject("RolsFormsPermissions", rolFormPermission);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Permissions. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet ChangesLogs. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToChangesLogs(ChangeLog changeLog)
        {
            base.AddObject("ChangesLogs", changeLog);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="ChangeLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChangeLog : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto ChangeLog.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="userId">Valor inicial de la propiedad UserId.</param>
        /// <param name="tableName">Valor inicial de la propiedad TableName.</param>
        /// <param name="recordId">Valor inicial de la propiedad RecordId.</param>
        /// <param name="action">Valor inicial de la propiedad Action.</param>
        /// <param name="changeTimesTamp">Valor inicial de la propiedad ChangeTimesTamp.</param>
        /// <param name="previousValue">Valor inicial de la propiedad PreviousValue.</param>
        /// <param name="newValue">Valor inicial de la propiedad NewValue.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static ChangeLog CreateChangeLog(global::System.Int32 id, global::System.Int32 userId, global::System.String tableName, global::System.String recordId, global::System.String action, global::System.String changeTimesTamp, global::System.String previousValue, global::System.String newValue, global::System.String deleteAt, global::System.String createAt)
        {
            ChangeLog changeLog = new ChangeLog();
            changeLog.Id = id;
            changeLog.UserId = userId;
            changeLog.TableName = tableName;
            changeLog.RecordId = recordId;
            changeLog.Action = action;
            changeLog.ChangeTimesTamp = changeTimesTamp;
            changeLog.PreviousValue = previousValue;
            changeLog.NewValue = newValue;
            changeLog.DeleteAt = deleteAt;
            changeLog.CreateAt = createAt;
            return changeLog;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false, "TableName");
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RecordId
        {
            get
            {
                return _RecordId;
            }
            set
            {
                OnRecordIdChanging(value);
                ReportPropertyChanging("RecordId");
                _RecordId = StructuralObject.SetValidValue(value, false, "RecordId");
                ReportPropertyChanged("RecordId");
                OnRecordIdChanged();
            }
        }
        private global::System.String _RecordId;
        partial void OnRecordIdChanging(global::System.String value);
        partial void OnRecordIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChangeTimesTamp
        {
            get
            {
                return _ChangeTimesTamp;
            }
            set
            {
                OnChangeTimesTampChanging(value);
                ReportPropertyChanging("ChangeTimesTamp");
                _ChangeTimesTamp = StructuralObject.SetValidValue(value, false, "ChangeTimesTamp");
                ReportPropertyChanged("ChangeTimesTamp");
                OnChangeTimesTampChanged();
            }
        }
        private global::System.String _ChangeTimesTamp;
        partial void OnChangeTimesTampChanging(global::System.String value);
        partial void OnChangeTimesTampChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreviousValue
        {
            get
            {
                return _PreviousValue;
            }
            set
            {
                OnPreviousValueChanging(value);
                ReportPropertyChanging("PreviousValue");
                _PreviousValue = StructuralObject.SetValidValue(value, false, "PreviousValue");
                ReportPropertyChanged("PreviousValue");
                OnPreviousValueChanged();
            }
        }
        private global::System.String _PreviousValue;
        partial void OnPreviousValueChanging(global::System.String value);
        partial void OnPreviousValueChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, false, "NewValue");
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "UserChangeLog", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DbModel.UserChangeLog", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DbModel.UserChangeLog", "User").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DbModel.UserChangeLog", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DbModel.UserChangeLog", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="Form")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Form : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Form.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="code">Valor inicial de la propiedad Code.</param>
        /// <param name="name">Valor inicial de la propiedad Name.</param>
        /// <param name="active">Valor inicial de la propiedad Active.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static Form CreateForm(global::System.Int32 id, global::System.TimeSpan code, global::System.String name, global::System.Boolean active, global::System.String deleteAt, global::System.String createAt)
        {
            Form form = new Form();
            form.Id = id;
            form.Code = code;
            form.Name = name;
            form.Active = active;
            form.DeleteAt = deleteAt;
            form.CreateAt = createAt;
            return form;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.TimeSpan _Code;
        partial void OnCodeChanging(global::System.TimeSpan value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "FormModuleForm", "FormModule")]
        public EntityCollection<FormModule> FormModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormModule>("DbModel.FormModuleForm", "FormModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormModule>("DbModel.FormModuleForm", "FormModule", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "FormRolFormPermission", "RolFormPermission")]
        public EntityCollection<RolFormPermission> RolFormPermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolFormPermission>("DbModel.FormRolFormPermission", "RolFormPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolFormPermission>("DbModel.FormRolFormPermission", "RolFormPermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="FormModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormModule : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto FormModule.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static FormModule CreateFormModule(global::System.Int32 id, global::System.String deleteAt, global::System.String createAt)
        {
            FormModule formModule = new FormModule();
            formModule.Id = id;
            formModule.DeleteAt = deleteAt;
            formModule.CreateAt = createAt;
            return formModule;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "FormModuleForm", "Form")]
        public Form FormId
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DbModel.FormModuleForm", "Form").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DbModel.FormModuleForm", "Form").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormIdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DbModel.FormModuleForm", "Form");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DbModel.FormModuleForm", "Form", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "ModuleFormModule", "Module")]
        public Module Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("DbModel.ModuleFormModule", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("DbModel.ModuleFormModule", "Module").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("DbModel.ModuleFormModule", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("DbModel.ModuleFormModule", "Module", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Module.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="code">Valor inicial de la propiedad Code.</param>
        /// <param name="name">Valor inicial de la propiedad Name.</param>
        /// <param name="active">Valor inicial de la propiedad Active.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static Module CreateModule(global::System.Int32 id, global::System.String code, global::System.String name, global::System.String active, global::System.String deleteAt, global::System.String createAt)
        {
            Module module = new Module();
            module.Id = id;
            module.Code = code;
            module.Name = name;
            module.Active = active;
            module.DeleteAt = deleteAt;
            module.CreateAt = createAt;
            return module;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, false, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.String _Active;
        partial void OnActiveChanging(global::System.String value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "ModuleFormModule", "FormModule")]
        public EntityCollection<FormModule> FormModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormModule>("DbModel.ModuleFormModule", "FormModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormModule>("DbModel.ModuleFormModule", "FormModule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Permission.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static Permission CreatePermission(global::System.Int32 id, global::System.String deleteAt, global::System.String createAt)
        {
            Permission permission = new Permission();
            permission.Id = id;
            permission.DeleteAt = deleteAt;
            permission.CreateAt = createAt;
            return permission;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "RolFormPermissionPermission", "RolFormPermission")]
        public EntityCollection<RolFormPermission> RolFormPermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolFormPermission>("DbModel.RolFormPermissionPermission", "RolFormPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolFormPermission>("DbModel.RolFormPermissionPermission", "RolFormPermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="Rol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rol : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Rol.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="rolUserId">Valor inicial de la propiedad RolUserId.</param>
        /// <param name="name">Valor inicial de la propiedad Name.</param>
        /// <param name="description">Valor inicial de la propiedad Description.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static Rol CreateRol(global::System.Int32 id, global::System.Int32 rolUserId, global::System.String name, global::System.String description, global::System.String deleteAt, global::System.String createAt)
        {
            Rol rol = new Rol();
            rol.Id = id;
            rol.RolUserId = rolUserId;
            rol.Name = name;
            rol.Description = description;
            rol.DeleteAt = deleteAt;
            rol.CreateAt = createAt;
            return rol;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolUserId
        {
            get
            {
                return _RolUserId;
            }
            set
            {
                OnRolUserIdChanging(value);
                ReportPropertyChanging("RolUserId");
                _RolUserId = StructuralObject.SetValidValue(value, "RolUserId");
                ReportPropertyChanged("RolUserId");
                OnRolUserIdChanged();
            }
        }
        private global::System.Int32 _RolUserId;
        partial void OnRolUserIdChanging(global::System.Int32 value);
        partial void OnRolUserIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "RolUserRol", "RolUser")]
        public RolUser RolUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolUser>("DbModel.RolUserRol", "RolUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolUser>("DbModel.RolUserRol", "RolUser").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RolUser> RolUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolUser>("DbModel.RolUserRol", "RolUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RolUser>("DbModel.RolUserRol", "RolUser", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "RolRolFormPermission", "RolFormPermission")]
        public EntityCollection<RolFormPermission> RolFormPermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolFormPermission>("DbModel.RolRolFormPermission", "RolFormPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolFormPermission>("DbModel.RolRolFormPermission", "RolFormPermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="RolFormPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolFormPermission : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto RolFormPermission.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="rolId">Valor inicial de la propiedad RolId.</param>
        /// <param name="formId">Valor inicial de la propiedad FormId.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static RolFormPermission CreateRolFormPermission(global::System.Int32 id, global::System.Int32 rolId, global::System.Int32 formId, global::System.String deleteAt, global::System.String createAt)
        {
            RolFormPermission rolFormPermission = new RolFormPermission();
            rolFormPermission.Id = id;
            rolFormPermission.RolId = rolId;
            rolFormPermission.FormId = formId;
            rolFormPermission.DeleteAt = deleteAt;
            rolFormPermission.CreateAt = createAt;
            return rolFormPermission;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolId
        {
            get
            {
                return _RolId;
            }
            set
            {
                OnRolIdChanging(value);
                ReportPropertyChanging("RolId");
                _RolId = StructuralObject.SetValidValue(value, "RolId");
                ReportPropertyChanged("RolId");
                OnRolIdChanged();
            }
        }
        private global::System.Int32 _RolId;
        partial void OnRolIdChanging(global::System.Int32 value);
        partial void OnRolIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormId
        {
            get
            {
                return _FormId;
            }
            set
            {
                OnFormIdChanging(value);
                ReportPropertyChanging("FormId");
                _FormId = StructuralObject.SetValidValue(value, "FormId");
                ReportPropertyChanged("FormId");
                OnFormIdChanged();
            }
        }
        private global::System.Int32 _FormId;
        partial void OnFormIdChanging(global::System.Int32 value);
        partial void OnFormIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "RolRolFormPermission", "Rol")]
        public Rol Rol
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rol>("DbModel.RolRolFormPermission", "Rol").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rol>("DbModel.RolRolFormPermission", "Rol").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rol> RolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rol>("DbModel.RolRolFormPermission", "Rol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rol>("DbModel.RolRolFormPermission", "Rol", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "FormRolFormPermission", "Form")]
        public Form Form
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DbModel.FormRolFormPermission", "Form").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DbModel.FormRolFormPermission", "Form").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DbModel.FormRolFormPermission", "Form");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DbModel.FormRolFormPermission", "Form", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "RolFormPermissionPermission", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("DbModel.RolFormPermissionPermission", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("DbModel.RolFormPermissionPermission", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("DbModel.RolFormPermissionPermission", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("DbModel.RolFormPermissionPermission", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="RolUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolUser : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto RolUser.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="userId">Valor inicial de la propiedad UserId.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static RolUser CreateRolUser(global::System.Int32 id, global::System.Int32 userId, global::System.String deleteAt, global::System.String createAt)
        {
            RolUser rolUser = new RolUser();
            rolUser.Id = id;
            rolUser.UserId = userId;
            rolUser.DeleteAt = deleteAt;
            rolUser.CreateAt = createAt;
            return rolUser;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "UserRolUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DbModel.UserRolUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DbModel.UserRolUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DbModel.UserRolUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DbModel.UserRolUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "RolUserRol", "Rol")]
        public EntityCollection<Rol> Rol
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rol>("DbModel.RolUserRol", "Rol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rol>("DbModel.RolUserRol", "Rol", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto User.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="userName">Valor inicial de la propiedad UserName.</param>
        /// <param name="email">Valor inicial de la propiedad Email.</param>
        /// <param name="password">Valor inicial de la propiedad Password.</param>
        /// <param name="createdAt">Valor inicial de la propiedad CreatedAt.</param>
        /// <param name="onUpdateAt">Valor inicial de la propiedad OnUpdateAt.</param>
        /// <param name="deleteAt">Valor inicial de la propiedad DeleteAt.</param>
        /// <param name="createAt">Valor inicial de la propiedad CreateAt.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String email, global::System.String password, global::System.String createdAt, global::System.String onUpdateAt, global::System.String deleteAt, global::System.String createAt)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Email = email;
            user.Password = password;
            user.CreatedAt = createdAt;
            user.OnUpdateAt = onUpdateAt;
            user.DeleteAt = deleteAt;
            user.CreateAt = createAt;
            return user;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value, false, "CreatedAt");
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.String _CreatedAt;
        partial void OnCreatedAtChanging(global::System.String value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OnUpdateAt
        {
            get
            {
                return _OnUpdateAt;
            }
            set
            {
                OnOnUpdateAtChanging(value);
                ReportPropertyChanging("OnUpdateAt");
                _OnUpdateAt = StructuralObject.SetValidValue(value, false, "OnUpdateAt");
                ReportPropertyChanged("OnUpdateAt");
                OnOnUpdateAtChanged();
            }
        }
        private global::System.String _OnUpdateAt;
        partial void OnOnUpdateAtChanging(global::System.String value);
        partial void OnOnUpdateAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeleteAt
        {
            get
            {
                return _DeleteAt;
            }
            set
            {
                OnDeleteAtChanging(value);
                ReportPropertyChanging("DeleteAt");
                _DeleteAt = StructuralObject.SetValidValue(value, false, "DeleteAt");
                ReportPropertyChanged("DeleteAt");
                OnDeleteAtChanged();
            }
        }
        private global::System.String _DeleteAt;
        partial void OnDeleteAtChanging(global::System.String value);
        partial void OnDeleteAtChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateAt
        {
            get
            {
                return _CreateAt;
            }
            set
            {
                OnCreateAtChanging(value);
                ReportPropertyChanging("CreateAt");
                _CreateAt = StructuralObject.SetValidValue(value, false, "CreateAt");
                ReportPropertyChanged("CreateAt");
                OnCreateAtChanged();
            }
        }
        private global::System.String _CreateAt;
        partial void OnCreateAtChanging(global::System.String value);
        partial void OnCreateAtChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "UserRolUser", "RolUser")]
        public EntityCollection<RolUser> RolUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolUser>("DbModel.UserRolUser", "RolUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolUser>("DbModel.UserRolUser", "RolUser", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "UserChangeLog", "ChangeLog")]
        public EntityCollection<ChangeLog> ChangeLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChangeLog>("DbModel.UserChangeLog", "ChangeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChangeLog>("DbModel.UserChangeLog", "ChangeLog", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
